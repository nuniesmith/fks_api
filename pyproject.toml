[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "fks_api"
version = "0.1.0"
description = "FKS Trading API service (extracted)"
authors = [ { name = "FKS" } ]
requires-python = ">=3.11"
# README is inside service directory, not parent
readme = "README.md"
license = { text = "MIT" }
dependencies = [
  "fastapi",
  "uvicorn[standard]",
  "httpx",
  "requests",
  "orjson",
  "pydantic>=2",
  "celery[redis]>=5.3.0",
]

[project.optional-dependencies]
websocket = ["websockets", "python-socketio"]
# Poetry extras must use normalized names; split bracket extras into separate pinned deps.
security = ["python-jose", "cryptography", "passlib", "bcrypt", "python-multipart"]

[project.scripts]
fks_api = "fastapi_main:app"

[tool.uvicorn]
factory = true

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.poetry]
name = "fks_api"
version = "0.1.0"
description = "FKS Trading API service (extracted)"
authors = ["FKS <nunie.smith01@gmail.com>"]
license = "Proprietary"
readme = "README.md"
# Flat layout: modules live directly under src/, so we omit an explicit packages include.
# When a proper package directory (src/fks_api/) is introduced, add a packages stanza back.

# Explicitly declare the src package layout so Poetry's builder resolves the module.
packages = [
  { include = "fks_api", from = "src" }
]

[tool.poetry.dependencies]
# Align with container base image (currently Python 3.13) allowing forward minor versions
python = ">=3.11,<3.14"
fastapi = "*"
uvicorn = {extras = ["standard"], version = "*"}
httpx = "*"
requests = "*"
orjson = "*"
pydantic = ">=2"
celery = {version = ">=5.3", extras = ["redis"]}

[tool.poetry.extras]
websocket = ["websockets", "python-socketio"]
security = ["python-jose", "cryptography", "passlib", "bcrypt", "python-multipart"]

[tool.poetry.scripts]
fks_api = "fastapi_main:app"


