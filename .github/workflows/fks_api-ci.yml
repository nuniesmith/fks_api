name: fks_api CI

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - 'Dockerfile'
      - '.github/workflows/fks_api-ci.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - 'Dockerfile'
      - '.github/workflows/fks_api-ci.yml'
  workflow_dispatch: {}

jobs:
  test:
    name: Unit Tests (Python)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.11'
            cache: 'pip'
            cache-dependency-path: |
              requirements.txt
              requirements.dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements.dev.txt

      - name: Run tests
        run: pytest -q --maxfail=1 --disable-warnings --color=yes

      - name: Upload test results (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-cache
          path: .pytest_cache
          if-no-files-found: ignore

  docker-build:
    name: Docker Build (fks_api)
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: (Optional) Log in to DockerHub
        if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME != '' && format('{0}/fks_api', secrets.DOCKERHUB_USERNAME) || 'local/fks_api' }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.simple
          push: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SERVICE_RUNTIME=python
            SERVICE_TYPE=api
            BUILD_TYPE=cpu

      - name: Run container smoke test
        run: |
          docker run -d --rm -p 8080:8080 --name fks_api_test ${{ steps.meta.outputs.tags }}
          echo 'Waiting for health endpoint...'
          for i in {1..20}; do
            sleep 2
            if curl -sf http://localhost:8080/health > /dev/null; then
              echo 'Service responded to /health';
              curl -s http://localhost:8080/health | head -c 500;
              break;
            fi
            if [ $i -eq 20 ]; then echo 'Service failed to become healthy'; docker logs fks_api_test || true; exit 1; fi
          done
          docker logs fks_api_test | tail -n 50 || true
          docker stop fks_api_test

      - name: Export image artifact (no push scenario)
        if: ${{ !(secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '') }}
        run: |
          docker save ${{ steps.meta.outputs.tags }} | gzip > fks_api-image.tar.gz
        
      - name: Upload image artifact
        if: ${{ !(secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '') }}
        uses: actions/upload-artifact@v4
        with:
          name: fks_api-image
          path: fks_api-image.tar.gz
